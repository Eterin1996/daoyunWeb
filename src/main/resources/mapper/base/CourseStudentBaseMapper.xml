<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.base.CourseStudentBaseMapper">


    <insert id="insertCourseStudent"  useGeneratedKeys="true" keyProperty="Id">
        INSERT INTO `course_student`
        (
        <trim suffixOverrides=",">
                    <if test="Id!=null">
                        `Id`,
                    </if>
                    <if test="CourseId!=null">
                        `CourseId`,
                    </if>
                    <if test="StudentId!=null">
                        `StudentId`,
                    </if>
                    <if test="StudentEXP!=null">
                        `StudentEXP`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="Id!=null">
                    #{Id},
                </if>
                <if test="CourseId!=null">
                    #{CourseId},
                </if>
                <if test="StudentId!=null">
                    #{StudentId},
                </if>
                <if test="StudentEXP!=null">
                    #{StudentEXP},
                </if>
        </trim>
        )
    </insert>




    <update id="updateCourseStudent">
        UPDATE `course_student`
        SET
        <trim suffixOverrides=",">
            <if test="CourseId != null">
                `CourseId` = #{CourseId},
            </if>
            <if test="StudentId != null">
                `StudentId` = #{StudentId},
            </if>
            <if test="StudentEXP != null">
                `StudentEXP` = #{StudentEXP},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `Id` = #{Id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `course_student`
        SET
        <trim suffixOverrides=",">
        <if test="set.CourseId != null">
            `CourseId` = #{set.CourseId},
        </if>
        <if test="set.StudentId != null">
            `StudentId` = #{set.StudentId},
        </if>
        <if test="set.StudentEXP != null">
            `StudentEXP` = #{set.StudentEXP},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.IdList != null">
                    `Id` in
                    <foreach collection="where.IdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.IdSt !=null">
                `Id` >= #{where.IdSt} and
            </if>
            <if test="where.IdEd!=null">
                `Id` &lt;= #{where.IdEd} and
            </if>
                <if test="where.CourseIdList != null">
                    `CourseId` in
                    <foreach collection="where.CourseIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.CourseIdSt !=null">
                `CourseId` >= #{where.CourseIdSt} and
            </if>
            <if test="where.CourseIdEd!=null">
                `CourseId` &lt;= #{where.CourseIdEd} and
            </if>
                <if test="where.StudentIdList != null">
                    `StudentId` in
                    <foreach collection="where.StudentIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.StudentIdSt !=null">
                `StudentId` >= #{where.StudentIdSt} and
            </if>
            <if test="where.StudentIdEd!=null">
                `StudentId` &lt;= #{where.StudentIdEd} and
            </if>
                <if test="where.StudentEXPList != null">
                    `StudentEXP` in
                    <foreach collection="where.StudentEXPList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.StudentEXPSt !=null">
                `StudentEXP` >= #{where.StudentEXPSt} and
            </if>
            <if test="where.StudentEXPEd!=null">
                `StudentEXP` &lt;= #{where.StudentEXPEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.utils.CourseStudent" id="CourseStudentMap">
        <result property="Id" column="Id"/>
        <result property="CourseId" column="CourseId"/>
        <result property="StudentId" column="StudentId"/>
        <result property="StudentEXP" column="StudentEXP"/>
    </resultMap>


    <select id="queryCourseStudent" resultMap="CourseStudentMap">
        select
        <include refid="baseResult"></include>
        from  `course_student`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="Id != null">
                `Id` = #{Id} and
            </if>
            <if test="CourseId != null">
                `CourseId` = #{CourseId} and
            </if>
            <if test="StudentId != null">
                `StudentId` = #{StudentId} and
            </if>
            <if test="StudentEXP != null">
                `StudentEXP` = #{StudentEXP} and
            </if>
            <if test = "(_parameter instanceof com.utils.CourseStudent$QueryBuilder) == true">
                <if test="IdList != null">
                    `Id` in
                    <foreach collection="IdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="IdSt !=null">
                    `Id` >= #{IdSt} and
                </if>
                <if test="IdEd!=null">
                    `Id` &lt;= #{IdEd} and
                </if>
                <if test="CourseIdList != null">
                    `CourseId` in
                    <foreach collection="CourseIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="CourseIdSt !=null">
                    `CourseId` >= #{CourseIdSt} and
                </if>
                <if test="CourseIdEd!=null">
                    `CourseId` &lt;= #{CourseIdEd} and
                </if>
                <if test="StudentIdList != null">
                    `StudentId` in
                    <foreach collection="StudentIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="StudentIdSt !=null">
                    `StudentId` >= #{StudentIdSt} and
                </if>
                <if test="StudentIdEd!=null">
                    `StudentId` &lt;= #{StudentIdEd} and
                </if>
                <if test="StudentEXPList != null">
                    `StudentEXP` in
                    <foreach collection="StudentEXPList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="StudentEXPSt !=null">
                    `StudentEXP` >= #{StudentEXPSt} and
                </if>
                <if test="StudentEXPEd!=null">
                    `StudentEXP` &lt;= #{StudentEXPEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryCourseStudentLimit1" resultMap="CourseStudentMap">
        select
        <include refid="baseResult"></include>
        from  `course_student`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="Id != null">
                `Id` = #{Id} and
            </if>
            <if test="CourseId != null">
                `CourseId` = #{CourseId} and
            </if>
            <if test="StudentId != null">
                `StudentId` = #{StudentId} and
            </if>
            <if test="StudentEXP != null">
                `StudentEXP` = #{StudentEXP} and
            </if>
            <if test = "(_parameter instanceof com.utils.CourseStudent$QueryBuilder) == true">
                    <if test="IdList != null">
                        `Id` in
                        <foreach collection="IdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="IdSt !=null">
                    `Id` >= #{IdSt} and
                </if>
                <if test="IdEd!=null">
                    `Id` &lt;= #{IdEd} and
                </if>
                    <if test="CourseIdList != null">
                        `CourseId` in
                        <foreach collection="CourseIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="CourseIdSt !=null">
                    `CourseId` >= #{CourseIdSt} and
                </if>
                <if test="CourseIdEd!=null">
                    `CourseId` &lt;= #{CourseIdEd} and
                </if>
                    <if test="StudentIdList != null">
                        `StudentId` in
                        <foreach collection="StudentIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="StudentIdSt !=null">
                    `StudentId` >= #{StudentIdSt} and
                </if>
                <if test="StudentIdEd!=null">
                    `StudentId` &lt;= #{StudentIdEd} and
                </if>
                    <if test="StudentEXPList != null">
                        `StudentEXP` in
                        <foreach collection="StudentEXPList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="StudentEXPSt !=null">
                    `StudentEXP` >= #{StudentEXPSt} and
                </if>
                <if test="StudentEXPEd!=null">
                    `StudentEXP` &lt;= #{StudentEXPEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `Id`,
        `CourseId`,
        `StudentId`,
        `StudentEXP`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.utils.CourseStudent$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.Id==true">
                        `Id`,
                    </if>
                    <if test="fetchFields.fetchFields.CourseId==true">
                        `CourseId`,
                    </if>
                    <if test="fetchFields.fetchFields.StudentId==true">
                        `StudentId`,
                    </if>
                    <if test="fetchFields.fetchFields.StudentEXP==true">
                        `StudentEXP`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.Id==null">
                        `Id`,
                    </if>
                    <if test="fetchFields.excludeFields.CourseId==null">
                        `CourseId`,
                    </if>
                    <if test="fetchFields.excludeFields.StudentId==null">
                        `StudentId`,
                    </if>
                    <if test="fetchFields.excludeFields.StudentEXP==null">
                        `StudentEXP`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.utils.CourseStudent$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>